#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1836 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 10 #"ffi/unsafe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"requ"
0 0 15 3 3 #"ire"
0 0 24 3 1 #" "
0 0 14 3 17 #"ffi/unsafe/define"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-ffi-definer"
0 0 24 3 1 #" "
0 0 15 3 13 #"define-master"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ffi-lib"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"/"
0 0 19 3 5 #"home/"
0 0 19 3 2 #"su"
0 0 19 3 3 #"mit"
0 0 19 3 18 #"/CS152/Project/go-"
0 0 19 3 7 #"racket/"
0 0 19 3 5 #"gnugo"
0 0 19 3 22 #"-3.8/engine/libmaster\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Definitions of functions exported from gnugo "
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Undo a"
0 0 17 3 19 #" move on the board."
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; @param : void"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; @return : void"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-master"
0 0 24 3 1 #" "
0 0 14 3 18 #"undo_previous_move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"_fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"_void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Clear the entire board."
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; @param : void"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; @return : void"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-master"
0 0 24 3 1 #" "
0 0 14 3 11 #"clear_board"
0 0 24 3 2 #" ("
0 0 14 3 4 #"_fun"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"_void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; Get the entity at a particular intersection on the board"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; @param : integers i, j which specify a coordinate on the board"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; @return : integer. 0 -> Empty, 1 -> White, 2 -> Black"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-master"
0 0 24 3 1 #" "
0 0 14 3 9 #"board_pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"_fun"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; Attempt"
0 0 17 3 36 #" a move at a particular intersection"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; @param : integers i, j and color"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; @return : integer. 0 -> invalid move, 1 -> valid move."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-master"
0 0 24 3 1 #" "
0 0 14 3 3 #"try"
0 0 14 3 5 #"_move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"_fun"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"_int"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";This will be the main file for the go game"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";this will "
0 0 17 3 31 #"instatiate the go board and the"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";go engine"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Make a frame by instantiating the frame% class"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";Board representation"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";0 -> No stone present"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";1 -> White Stone"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";2 -> Black Stone"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 2 #" ("
0 0 14 3 12 #"build-vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 12 #"build-vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";Useful macros"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 6 #"access"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"j"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";Definitions for all the images"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";used in the UI"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 99
(
 #";In the universe model (http://docs.racket-lang.org/teachpack/2htdpu"
 #"niverse.html#%28part._scene%29)"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";you have to specify a set of frames and using event handlers like"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";on-tick (passing of time) on-click and so on, you have to transitio"
 #"n to other frames."
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";they call these frames "
0 0 17 3 54 #"worldstate for some reason. Don't know much about them"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";Intro should be the first frame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"board-img"
0 0 24 3 2 #" ("
0 0 14 3 5 #"scale"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 4 #"2209"
0 0 24 3 3 #") ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Go_board_9x9.png"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"black-stone"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"white-stone"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"white"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"go-text"
0 0 24 3 2 #" ("
0 0 14 3 9 #"text/font"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"GO"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Gill"
0 0 19 3 5 #" Sans"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"modern"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"normal"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"bold"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"pick-color-text"
0 0 24 3 2 #" ("
0 0 14 3 9 #"text/font"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"PICK"
0 0 19 3 6 #" COLOR"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Gill"
0 0 19 3 5 #" Sans"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"modern"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"normal"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 5 #"\"bold"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"stone-choice"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 2 #" ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"crop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"white"
0 0 19 3 1 #"\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"intro"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 1 #" "
0 0 14 3 12 #"stone-choice"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"-50"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 1 #" "
0 0 14 3 15 #"pick-color-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 8 #"\"outline"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 1 #" "
0 0 14 3 7 #"go-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"135"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 11 #"empty-scene"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                            "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #" "
0 0 21 3 3 #"179"
0 0 24 3 1 #" "
0 0 21 3 2 #"92"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";Interactions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";Enforce rules"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Return a list of positions where "
0 0 17 3 13 #"ko can happen"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 21 #" (eye i j stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 12 #" 8) (< i 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (sub1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" i (add1 j)) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (sub1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 12 #" 0) (= j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (add1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 12 #" 0) (= j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (sub1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 12 #" 8) (= j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (sub1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (add1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 12 #" 8) (= j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (sub1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (sub1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";        ((= i 0)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" i (sub1 j)) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (add1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";        ((= i 8)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (sub1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" i (sub1 j)) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (add1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";        ((= j 0)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 25 #" (sub1 i)  j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (add1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";        ((= j 8)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"         ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (add1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 24 #" (sub1 i) j) stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 26 #" i (sub1 j)) stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"        (else (error \""
0 0 17 3 9 #"Incorrect"
0 0 17 3 1 #" "
0 0 17 3 12 #"Indices\"))))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";        "
0 0 24 29 1 #"\n"
0 0 17 3 15 #";              "
0 0 24 29 1 #"\n"
0 0 17 3 20 #";(define (detect-ko)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"  (define (other-type stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #"="
0 0 17 3 17 #" stone-type 1) 2)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          (("
0 0 17 3 1 #"="
0 0 17 3 19 #" stone-type 2) 1)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"pattern-detect"
0 0 17 3 16 #" i j stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern1)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (> 8 i))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern2)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (> 8 j))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (> 8 i))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (> 8 i))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 10 #") (> j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (< j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern7)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 10 #") (> j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern8)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (< j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 31 #" 2)) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    (define (pattern9)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 10 #") (> i 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern10)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (< i 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"add1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern11)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (< i 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern12)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 3 #") ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (< i 7))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 3 #") ("
0 0 17 3 4 #"sub1"
0 0 17 3 29 #" j)) (other-type stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"                  ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 31 #") j) (other-type stone-type))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern13)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (= j 1))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 29 #" 0) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern14)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (= j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 29 #" 1) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern15)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 10 #") (= j 7))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 29 #" 8) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern16)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 10 #") (= j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 29 #" 7) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern17)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 10 #") (= j 7))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 29 #" 8) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern18)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 10 #") (= j 0))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 29 #" 1) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern19)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 10 #") (= j 8))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 29 #" 7) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";    (define (pattern20)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 10 #") (= j 1))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"             ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"access"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 29 #" 7) (other-type stone-type)))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";            (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"eye"
0 0 17 3 16 #" i j stone-type)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 8 #"pattern1"
0 0 17 3 34 #") (pattern2) (pattern3) (pattern4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 8 #"pattern5"
0 0 17 3 34 #") (pattern6) (pattern7) (pattern8)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 8 #"pattern9"
0 0 17 3 37 #") (pattern10) (pattern11) (pattern12)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 9 #"pattern13"
0 0 17 3 37 #") (pattern14) (pattern15) (pattern16)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 16 #"               ("
0 0 17 3 9 #"pattern17"
0 0 17 3 39 #") (pattern18) (pattern19) (pattern20)))"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";          (else #f)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 18 #" j stone-type lst)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #"="
0 0 17 3 10 #" i 9) lst)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          (("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 3 #") ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 20 #") j stone-type lst))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"          (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 2 #" ("
0 0 17 3 10 #"vector-ref"
0 0 17 3 1 #" "
0 0 17 3 5 #"board"
0 0 17 3 9 #" i) j) 0)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 14 #"pattern-detect"
0 0 17 3 17 #" i j stone-type))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"           ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 3 #") ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 12 #" i j) lst)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"          ("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 2 #" ("
0 0 17 3 4 #"add1"
0 0 17 3 22 #" j) stone-type lst))))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"append"
0 0 17 3 2 #" ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"()) ("
0 0 17 3 14 #"traverse-board"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 11 #" 0 2 '())))"
0 0 24 29 1 #"\n"
0           0
